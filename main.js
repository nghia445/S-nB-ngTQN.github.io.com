// L·∫•y n√∫t
const scrollTopBtn = document.getElementById("scrollTopBtn");

// Khi k√©o trang xu·ªëng 100px, hi·ªán n√∫t
window.onscroll = function () {
  if (
    document.body.scrollTop > 100 ||
    document.documentElement.scrollTop > 100
  ) {
    scrollTopBtn.style.display = "block";
  } else {
    scrollTopBtn.style.display = "none";
  }
};

// Khi click n√∫t, cu·ªôn m∆∞·ª£t v·ªÅ ƒë·∫ßu trang
scrollTopBtn.addEventListener("click", function () {
  window.scrollTo({ top: 0, behavior: "smooth" });
});

onclick = "event.preventDefault()";
function toggleDarkMode() {
  document.body.classList.toggle("dark-mode");
}
const bannerLeft = document.getElementById("bannerLeft");
const bannerRight = document.getElementById("bannerRight");

window.addEventListener("scroll", () => {
  const scrollY = window.scrollY;

  if (scrollY === 0) {
    // ·ªû ƒë·∫ßu trang, ƒë·∫∑t l·∫°i v·ªã tr√≠ b√¨nh th∆∞·ªùng
    bannerLeft.style.top = "0px";
    bannerLeft.style.left = "0px";

    bannerRight.style.top = "0px";
    bannerRight.style.right = "0px";
  } else if (scrollY >= 80) {
    // Khi cu·ªôn xu·ªëng ƒë·ªß s√¢u, ƒë·∫©y banner l√™n 80px
    bannerLeft.style.top = "-80px";
    bannerLeft.style.left = "20px";

    bannerRight.style.top = "-80px";
    bannerRight.style.right = "20px";
  } else {
    // Trong kho·∫£ng cu·ªôn nh·ªè h∆°n 80px (ch∆∞a t·ªõi m·ª©c "·∫©n")
    bannerLeft.style.top = "0px";
    bannerLeft.style.left = "10px";

    bannerRight.style.top = "0px";
    bannerRight.style.right = "10px";
  }

  // Lu√¥n gi·ªØ position c·ªë ƒë·ªãnh
  bannerLeft.style.position = "fixed";
  bannerRight.style.position = "fixed";
});
const mic = document.getElementById("mic");
const voiceSearch = document.getElementById("voiceSearch");
const ketQua = document.getElementById("ketQua");

// Ki·ªÉm tra xem tr√¨nh duy·ªát c√≥ h·ªó tr·ª£ Speech Recognition API kh√¥ng
if ("webkitSpeechRecognition" in window || "SpeechRecognition" in window) {
  const SpeechRecognition =
    window.SpeechRecognition || window.webkitSpeechRecognition;
  const recognition = new SpeechRecognition();

  recognition.lang = "vi-VN"; // Ng√¥n ng·ªØ ti·∫øng Vi·ªát
  recognition.continuous = false; // Nh·∫≠n di·ªán m·ªôt l·∫ßn khi d·ª´ng n√≥i
  recognition.interimResults = false; // Kh√¥ng hi·ªÉn th·ªã k·∫øt qu·∫£ t·∫°m th·ªùi

  mic.addEventListener("click", () => {
    recognition.start();
    voiceSearch.placeholder = "ƒêang nghe...";
  });

  recognition.onresult = function (event) {
    const transcript = event.results[0][0].transcript;
    voiceSearch.value = transcript;
    voiceSearch.placeholder = "üîç T√¨m ki·∫øm c√°i b·∫°n c·∫ßn!";
    ketQua.textContent = "B·∫°n ƒë√£ n√≥i: " + transcript;
    // Th√™m logic t√¨m ki·∫øm ·ªü ƒë√¢y d·ª±a tr√™n 'transcript'
    console.log("K·∫øt qu·∫£ nh·∫≠n di·ªán:", transcript);
  };

  recognition.onerror = function (event) {
    console.error("L·ªói nh·∫≠n di·ªán gi·ªçng n√≥i:", event.error);
    ketQua.textContent = "C√≥ l·ªói x·∫£y ra khi nh·∫≠n di·ªán gi·ªçng n√≥i.";
    voiceSearch.placeholder = "üîç T√¨m ki·∫øm c√°i b·∫°n c·∫ßn!";
  };

  recognition.onend = function () {
    console.log("Nh·∫≠n di·ªán gi·ªçng n√≥i ƒë√£ k·∫øt th√∫c.");
    voiceSearch.placeholder = "üîç T√¨m ki·∫øm c√°i b·∫°n c·∫ßn!";
  };
} else {
  ketQua.textContent =
    "Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ Speech Recognition API.";
  mic.style.display = "none"; // ·∫®n bi·ªÉu t∆∞·ª£ng micro n·∫øu kh√¥ng h·ªó tr·ª£
}
